// Application Data
const physicsClasses = [
    {
        class: 6,
        titleKey: "force_fields",
        subtitleKey: "physics_adventure",
        descriptionKey: "force_fields_desc",
        objectives: ["force_concepts", "friction_understanding", "motion_prediction", "newton_laws_basic"],
        icon: "‚ö°",
        status: "coming_soon"
    },
    {
        class: 7,
        titleKey: "light_quest",
        subtitleKey: "optics_adventure", 
        descriptionKey: "light_quest_desc",
        objectives: ["reflection_understanding", "refraction_basics", "light_dispersion", "optical_principles"],
        icon: "üîç",
        status: "coming_soon"
    },
    {
        class: 8,
        titleKey: "magnet_maze",
        subtitleKey: "magnetic_adventure",
        descriptionKey: "magnet_maze_desc",
        objectives: ["magnetic_field_concepts", "attraction_repulsion", "electromagnet_basics", "magnetic_pole_understanding"],
        icon: "üß≤",
        status: "coming_soon"
    },
    {
        class: 9,
        titleKey: "circuit_builder",
        subtitleKey: "electrical_adventure",
        descriptionKey: "circuit_builder_desc",
        objectives: ["ohm_law_mastery", "series_circuits", "parallel_circuits", "current_voltage_resistance"],
        icon: "üîå", 
        status: "coming_soon"
    },
    {
        class: 10,
        titleKey: "wave_rider",
        subtitleKey: "wave_adventure",
        descriptionKey: "wave_rider_desc",
        objectives: ["wave_properties", "frequency_concepts", "wavelength_understanding", "sound_light_comparison"],
        icon: "üåä",
        status: "coming_soon"
    },
    {
        class: 11,
        titleKey: "projectile_arena",
        subtitleKey: "kinematics_adventure",
        descriptionKey: "projectile_arena_desc",
        objectives: ["projectile_motion", "kinematics_equations", "trajectory_analysis", "vector_concepts"],
        icon: "üéØ",
        status: "available",
        gameUrl: "../1-physics/class-11/index.html"
    },
    {
        class: 12,
        titleKey: "quantum_quest",
        subtitleKey: "modern_physics_adventure",
        descriptionKey: "quantum_quest_desc",
        objectives: ["atomic_models", "energy_quantization", "photoelectric_effect", "emission_spectra"],
        icon: "‚öõÔ∏è",
        status: "coming_soon"
    }
];

const translations = {
    en: {
        // Header and main content
        hero_title: "Discover Your Physics Journey Through Classes 6-12",
        hero_subtitle: "From force fields to quantum mechanics, each class level features unique games designed to make physics engaging, interactive, and fun.",
        download_btn: "üìã Download Complete Curriculum PDF",
        game_approach: "Each class level features a unique game-based approach to master specific physics concepts",
        features_title: "Why Choose E-Vidya Physics?",
        
        // Modal content
        coming_soon: "Coming Soon!",
        coming_soon_message: "This physics adventure is currently under development. Stay tuned for an exciting learning experience!",
        got_it: "Got it!",
        ready_to_play: "Ready to Play!",
        projectile_available_text: "üéØ Projectile Arena is now available! Launch projectiles to hit moving targets by adjusting angle, velocity, and gravity.",
        learning_objectives: "Learning Objectives:",
        maybe_later: "Maybe Later",
        start_playing: "Start Playing",
        
        // Class titles
        force_fields: "Force Fields",
        light_quest: "Light Quest",
        magnet_maze: "Magnet Maze",
        circuit_builder: "Circuit Builder",
        wave_rider: "Wave Rider",
        projectile_arena: "Projectile Arena",
        quantum_quest: "Quantum Quest",
        
        // Class subtitles
        physics_adventure: "Physics Adventure",
        optics_adventure: "Optics Adventure",
        magnetic_adventure: "Magnetic Adventure",
        electrical_adventure: "Electrical Adventure",
        wave_adventure: "Wave Adventure",
        kinematics_adventure: "Kinematics Adventure",
        modern_physics_adventure: "Modern Physics Adventure",
        
        // Class descriptions
        force_fields_desc: "Move objects through a maze by adjusting applied forces and predicting motion.",
        light_quest_desc: "Explore a case with mirrors, lenses, and prisms to guide light beams.",
        magnet_maze_desc: "Navigate a metallic ball through a maze using magnets placed at different spots.",
        circuit_builder_desc: "Build working electric circuits to power machines in a virtual lab.",
        wave_rider_desc: "Ride a wave across oceans by tuning frequency, wavelength, and amplitude.",
        projectile_arena_desc: "Launch projectiles to hit moving targets, adjusting angle/velocity/gravity.",
        quantum_quest_desc: "Unlock atomic mysteries by exploring energy levels, photons, and emission spectra.",
        
        // Learning objectives
        force_concepts: "Force concepts",
        friction_understanding: "Friction understanding",
        motion_prediction: "Motion prediction",
        newton_laws_basic: "Newton's Laws (basic)",
        reflection_understanding: "Reflection understanding",
        refraction_basics: "Refraction basics",
        light_dispersion: "Light dispersion",
        optical_principles: "Optical principles",
        magnetic_field_concepts: "Magnetic field concepts",
        attraction_repulsion: "Attraction/repulsion",
        electromagnet_basics: "Electromagnet basics",
        magnetic_pole_understanding: "Magnetic pole understanding",
        ohm_law_mastery: "Ohm's law mastery",
        series_circuits: "Series circuits",
        parallel_circuits: "Parallel circuits",
        current_voltage_resistance: "Current/voltage/resistance",
        wave_properties: "Wave properties",
        frequency_concepts: "Frequency concepts",
        wavelength_understanding: "Wavelength understanding",
        sound_light_comparison: "Sound/light comparison",
        projectile_motion: "Projectile motion",
        kinematics_equations: "Kinematics equations",
        trajectory_analysis: "Trajectory analysis",
        vector_concepts: "Vector concepts",
        atomic_models: "Atomic models",
        energy_quantization: "Energy quantization",
        photoelectric_effect: "Photoelectric effect",
        emission_spectra: "Emission spectra",
        
        // Modal objectives for Class 11
        objective_1: "Projectile motion mastery",
        objective_2: "Kinematics equations application",
        objective_3: "Trajectory analysis skills",
        objective_4: "Vector concept understanding",
        
        // Features
        feature_1_title: "Interactive Learning",
        feature_1_desc: "Each concept is taught through engaging games that make physics fun and memorable, turning complex problems into exciting challenges.",
        feature_2_title: "Progressive Difficulty",
        feature_2_desc: "Curriculum builds systematically from basic force concepts to modern physics, ensuring strong foundational understanding.",
        feature_3_title: "Achievement System",
        feature_3_desc: "Students earn badges, certificates, and recognition for mastering physics concepts and completing challenging levels.",
        feature_4_title: "Real-World Applications",
        feature_4_desc: "Every game connects physics concepts to real-world phenomena, helping students understand the relevance of their learning.",
        feature_5_title: "Adaptive Learning",
        feature_5_desc: "Adaptive algorithms adjust difficulty based on student performance, ensuring optimal challenge and continuous progress.",
        feature_6_title: "Social Learning",
        feature_6_desc: "Students can compete with peers, collaborate on problems, and participate in physics tournaments and challenges."
    },
    
    hi: {
        // Header and main content
        hero_title: "‡§ï‡§ï‡•ç‡§∑‡§æ 6-12 ‡§ï‡•á ‡§≤‡§ø‡§è ‡§Ö‡§™‡§®‡•Ä ‡§≠‡•å‡§§‡§ø‡§ï‡•Ä ‡§Ø‡§æ‡§§‡•ç‡§∞‡§æ ‡§ñ‡•ã‡§ú‡•á‡§Ç",
        hero_subtitle: "‡§¨‡§≤ ‡§ï‡•ç‡§∑‡•á‡§§‡•ç‡§∞ ‡§∏‡•á ‡§≤‡•á‡§ï‡§∞ ‡§ï‡•ç‡§µ‡§æ‡§Ç‡§ü‡§Æ ‡§Ø‡§æ‡§Ç‡§§‡•ç‡§∞‡§ø‡§ï‡•Ä ‡§§‡§ï, ‡§™‡•ç‡§∞‡§§‡•ç‡§Ø‡•á‡§ï ‡§ï‡§ï‡•ç‡§∑‡§æ ‡§∏‡•ç‡§§‡§∞ ‡§Æ‡•á‡§Ç ‡§Ö‡§®‡•Ç‡§†‡•á ‡§ñ‡•á‡§≤ ‡§π‡•à‡§Ç ‡§ú‡•ã ‡§≠‡•å‡§§‡§ø‡§ï‡•Ä ‡§ï‡•ã ‡§Ü‡§ï‡§∞‡•ç‡§∑‡§ï, ‡§á‡§Ç‡§ü‡§∞‡•à‡§ï‡•ç‡§ü‡§ø‡§µ ‡§î‡§∞ ‡§Æ‡§ú‡§º‡•á‡§¶‡§æ‡§∞ ‡§¨‡§®‡§æ‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§°‡§ø‡§ú‡§º‡§æ‡§á‡§® ‡§ï‡§ø‡§è ‡§ó‡§è ‡§π‡•à‡§Ç‡•§",
        download_btn: "üìã ‡§∏‡§Ç‡§™‡•Ç‡§∞‡•ç‡§£ ‡§™‡§æ‡§†‡•ç‡§Ø‡§ï‡•ç‡§∞‡§Æ ‡§™‡•Ä‡§°‡•Ä‡§è‡§´ ‡§°‡§æ‡§â‡§®‡§≤‡•ã‡§° ‡§ï‡§∞‡•á‡§Ç",
        game_approach: "‡§µ‡§ø‡§∂‡§ø‡§∑‡•ç‡§ü ‡§≠‡•å‡§§‡§ø‡§ï‡•Ä ‡§Ö‡§µ‡§ß‡§æ‡§∞‡§£‡§æ‡§ì‡§Ç ‡§Æ‡•á‡§Ç ‡§Æ‡§π‡§æ‡§∞‡§§ ‡§π‡§æ‡§∏‡§ø‡§≤ ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§™‡•ç‡§∞‡§§‡•ç‡§Ø‡•á‡§ï ‡§ï‡§ï‡•ç‡§∑‡§æ ‡§∏‡•ç‡§§‡§∞ ‡§Æ‡•á‡§Ç ‡§è‡§ï ‡§Ö‡§®‡•Ç‡§†‡§æ ‡§ñ‡•á‡§≤-‡§Ü‡§ß‡§æ‡§∞‡§ø‡§§ ‡§¶‡•É‡§∑‡•ç‡§ü‡§ø‡§ï‡•ã‡§£ ‡§π‡•à",
        features_title: "E-Vidya ‡§≠‡•å‡§§‡§ø‡§ï‡•Ä ‡§ï‡•ç‡§Ø‡•ã‡§Ç ‡§ö‡•Å‡§®‡•á‡§Ç?",
        
        // Modal content
        coming_soon: "‡§ú‡§≤‡•ç‡§¶ ‡§Ü ‡§∞‡§π‡§æ ‡§π‡•à!",
        coming_soon_message: "‡§Ø‡§π ‡§≠‡•å‡§§‡§ø‡§ï‡•Ä ‡§∏‡§æ‡§π‡§∏‡§ø‡§ï ‡§ï‡§æ‡§∞‡•ç‡§Ø ‡§µ‡§∞‡•ç‡§§‡§Æ‡§æ‡§® ‡§Æ‡•á‡§Ç ‡§µ‡§ø‡§ï‡§∏‡§ø‡§§ ‡§π‡•ã ‡§∞‡§π‡§æ ‡§π‡•à‡•§ ‡§è‡§ï ‡§∞‡•ã‡§Æ‡§æ‡§Ç‡§ö‡§ï ‡§∏‡•Ä‡§ñ‡§®‡•á ‡§ï‡•á ‡§Ö‡§®‡•Å‡§≠‡§µ ‡§ï‡•á ‡§≤‡§ø‡§è ‡§¨‡§®‡•á ‡§∞‡§π‡•á‡§Ç!",
        got_it: "‡§∏‡§Æ‡§ù ‡§ó‡§Ø‡§æ!",
        ready_to_play: "‡§ñ‡•á‡§≤‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§§‡•à‡§Ø‡§æ‡§∞!",
        projectile_available_text: "üéØ ‡§™‡•ç‡§∞‡§ï‡•ç‡§∑‡•á‡§™‡•ç‡§Ø ‡§è‡§∞‡§ø‡§®‡§æ ‡§Ö‡§¨ ‡§â‡§™‡§≤‡§¨‡•ç‡§ß ‡§π‡•à! ‡§ï‡•ã‡§£, ‡§µ‡•á‡§ó ‡§î‡§∞ ‡§ó‡•Å‡§∞‡•Å‡§§‡•ç‡§µ‡§æ‡§ï‡§∞‡•ç‡§∑‡§£ ‡§ï‡•ã ‡§∏‡§Æ‡§æ‡§Ø‡•ã‡§ú‡§ø‡§§ ‡§ï‡§∞‡§ï‡•á ‡§ö‡§≤‡§§‡•á ‡§≤‡§ï‡•ç‡§∑‡•ç‡§Ø‡•ã‡§Ç ‡§™‡§∞ ‡§™‡•ç‡§∞‡§ï‡•ç‡§∑‡•á‡§™‡•ç‡§Ø ‡§≤‡•â‡§®‡•ç‡§ö ‡§ï‡§∞‡•á‡§Ç‡•§",
        learning_objectives: "‡§∂‡§ø‡§ï‡•ç‡§∑‡§æ ‡§ï‡•á ‡§â‡§¶‡•ç‡§¶‡•á‡§∂‡•ç‡§Ø:",
        maybe_later: "‡§¨‡§æ‡§¶ ‡§Æ‡•á‡§Ç ‡§∂‡§æ‡§Ø‡§¶",
        start_playing: "‡§ñ‡•á‡§≤‡§®‡§æ ‡§∂‡•Å‡§∞‡•Ç ‡§ï‡§∞‡•á‡§Ç",
        
        // Class titles
        force_fields: "‡§¨‡§≤ ‡§ï‡•ç‡§∑‡•á‡§§‡•ç‡§∞",
        light_quest: "‡§™‡•ç‡§∞‡§ï‡§æ‡§∂ ‡§ñ‡•ã‡§ú",
        magnet_maze: "‡§ö‡•Å‡§Ç‡§¨‡§ï ‡§≠‡•Ç‡§≤‡§≠‡•Å‡§≤‡•à‡§Ø‡§æ",
        circuit_builder: "‡§∏‡§∞‡•ç‡§ï‡§ø‡§ü ‡§¨‡§ø‡§≤‡•ç‡§°‡§∞",
        wave_rider: "‡§§‡§∞‡§Ç‡§ó ‡§∏‡§µ‡§æ‡§∞",
        projectile_arena: "‡§™‡•ç‡§∞‡§ï‡•ç‡§∑‡•á‡§™‡•ç‡§Ø ‡§è‡§∞‡§ø‡§®‡§æ",
        quantum_quest: "‡§ï‡•ç‡§µ‡§æ‡§Ç‡§ü‡§Æ ‡§ñ‡•ã‡§ú",
        
        // Class subtitles
        physics_adventure: "‡§≠‡•å‡§§‡§ø‡§ï‡•Ä ‡§∏‡§æ‡§π‡§∏‡§ø‡§ï",
        optics_adventure: "‡§™‡•ç‡§∞‡§ï‡§æ‡§∂‡§ø‡§ï‡•Ä ‡§∏‡§æ‡§π‡§∏‡§ø‡§ï",
        magnetic_adventure: "‡§ö‡•Å‡§Ç‡§¨‡§ï‡•Ä‡§Ø ‡§∏‡§æ‡§π‡§∏‡§ø‡§ï",
        electrical_adventure: "‡§µ‡§ø‡§¶‡•ç‡§Ø‡•Å‡§§ ‡§∏‡§æ‡§π‡§∏‡§ø‡§ï",
        wave_adventure: "‡§§‡§∞‡§Ç‡§ó ‡§∏‡§æ‡§π‡§∏‡§ø‡§ï",
        kinematics_adventure: "‡§ó‡§§‡§ø‡§ï‡•Ä ‡§∏‡§æ‡§π‡§∏‡§ø‡§ï",
        modern_physics_adventure: "‡§Ü‡§ß‡•Å‡§®‡§ø‡§ï ‡§≠‡•å‡§§‡§ø‡§ï‡•Ä ‡§∏‡§æ‡§π‡§∏‡§ø‡§ï",
        
        // Class descriptions
        force_fields_desc: "‡§≤‡§æ‡§ó‡•Ç ‡§¨‡§≤‡•ã‡§Ç ‡§ï‡•ã ‡§∏‡§Æ‡§æ‡§Ø‡•ã‡§ú‡§ø‡§§ ‡§ï‡§∞‡§ï‡•á ‡§î‡§∞ ‡§ó‡§§‡§ø ‡§ï‡•Ä ‡§≠‡§µ‡§ø‡§∑‡•ç‡§Ø‡§µ‡§æ‡§£‡•Ä ‡§ï‡§∞‡§ï‡•á ‡§µ‡§∏‡•ç‡§§‡•Å‡§ì‡§Ç ‡§ï‡•ã ‡§≠‡•Ç‡§≤‡§≠‡•Å‡§≤‡•à‡§Ø‡§æ ‡§ï‡•á ‡§Æ‡§æ‡§ß‡•ç‡§Ø‡§Æ ‡§∏‡•á ‡§≤‡•á ‡§ú‡§æ‡§è‡§Ç‡•§",
        light_quest_desc: "‡§™‡•ç‡§∞‡§ï‡§æ‡§∂ ‡§ï‡§ø‡§∞‡§£‡•ã‡§Ç ‡§ï‡§æ ‡§Æ‡§æ‡§∞‡•ç‡§ó‡§¶‡§∞‡•ç‡§∂‡§® ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§¶‡§∞‡•ç‡§™‡§£, ‡§≤‡•á‡§Ç‡§∏ ‡§î‡§∞ ‡§™‡•ç‡§∞‡§ø‡§ú‡•ç‡§Æ ‡§ï‡•á ‡§∏‡§æ‡§• ‡§è‡§ï ‡§ï‡•á‡§∏ ‡§ï‡§æ ‡§Ö‡§®‡•ç‡§µ‡•á‡§∑‡§£ ‡§ï‡§∞‡•á‡§Ç‡•§",
        magnet_maze_desc: "‡§µ‡§ø‡§≠‡§ø‡§®‡•ç‡§® ‡§∏‡•ç‡§•‡§æ‡§®‡•ã‡§Ç ‡§™‡§∞ ‡§∞‡§ñ‡•á ‡§ö‡•Å‡§Ç‡§¨‡§ï‡•ã‡§Ç ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡§ï‡•á ‡§ß‡§æ‡§§‡•Å ‡§ï‡•Ä ‡§ó‡•á‡§Ç‡§¶ ‡§ï‡•ã ‡§≠‡•Ç‡§≤‡§≠‡•Å‡§≤‡•à‡§Ø‡§æ ‡§ï‡•á ‡§Æ‡§æ‡§ß‡•ç‡§Ø‡§Æ ‡§∏‡•á ‡§®‡•á‡§µ‡§ø‡§ó‡•á‡§ü ‡§ï‡§∞‡•á‡§Ç‡•§",
        circuit_builder_desc: "‡§Ü‡§≠‡§æ‡§∏‡•Ä ‡§™‡•ç‡§∞‡§Ø‡•ã‡§ó‡§∂‡§æ‡§≤‡§æ ‡§Æ‡•á‡§Ç ‡§Æ‡§∂‡•Ä‡§®‡•ã‡§Ç ‡§ï‡•ã ‡§∂‡§ï‡•ç‡§§‡§ø ‡§™‡•ç‡§∞‡§¶‡§æ‡§® ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§ï‡§æ‡§∞‡•ç‡§Ø‡§∂‡•Ä‡§≤ ‡§µ‡§ø‡§¶‡•ç‡§Ø‡•Å‡§§ ‡§∏‡§∞‡•ç‡§ï‡§ø‡§ü ‡§¨‡§®‡§æ‡§è‡§Ç‡•§",
        wave_rider_desc: "‡§Ü‡§µ‡•É‡§§‡•ç‡§§‡§ø, ‡§§‡§∞‡§Ç‡§ó ‡§¶‡•à‡§∞‡•ç‡§ò‡•ç‡§Ø ‡§î‡§∞ ‡§Ü‡§Ø‡§æ‡§Æ ‡§ï‡•ã ‡§∏‡§Æ‡§æ‡§Ø‡•ã‡§ú‡§ø‡§§ ‡§ï‡§∞‡§ï‡•á ‡§∏‡§Æ‡•Å‡§¶‡•ç‡§∞‡•ã‡§Ç ‡§Æ‡•á‡§Ç ‡§§‡§∞‡§Ç‡§ó ‡§ï‡•Ä ‡§∏‡§µ‡§æ‡§∞‡•Ä ‡§ï‡§∞‡•á‡§Ç‡•§",
        projectile_arena_desc: "‡§ï‡•ã‡§£/‡§µ‡•á‡§ó/‡§ó‡•Å‡§∞‡•Å‡§§‡•ç‡§µ‡§æ‡§ï‡§∞‡•ç‡§∑‡§£ ‡§∏‡§Æ‡§æ‡§Ø‡•ã‡§ú‡§ø‡§§ ‡§ï‡§∞‡§ï‡•á ‡§ö‡§≤‡§§‡•á ‡§≤‡§ï‡•ç‡§∑‡•ç‡§Ø‡•ã‡§Ç ‡§™‡§∞ ‡§™‡•ç‡§∞‡§ï‡•ç‡§∑‡•á‡§™‡•ç‡§Ø ‡§≤‡•â‡§®‡•ç‡§ö ‡§ï‡§∞‡•á‡§Ç‡•§",
        quantum_quest_desc: "‡§ä‡§∞‡•ç‡§ú‡§æ ‡§∏‡•ç‡§§‡§∞‡•ã‡§Ç, ‡§´‡•ã‡§ü‡•â‡§®‡•ã‡§Ç ‡§î‡§∞ ‡§â‡§§‡•ç‡§∏‡§∞‡•ç‡§ú‡§® ‡§∏‡•ç‡§™‡•á‡§ï‡•ç‡§ü‡•ç‡§∞‡§æ ‡§ï‡§æ ‡§Ö‡§®‡•ç‡§µ‡•á‡§∑‡§£ ‡§ï‡§∞‡§ï‡•á ‡§™‡§∞‡§Æ‡§æ‡§£‡•Å ‡§∞‡§π‡§∏‡•ç‡§Ø‡•ã‡§Ç ‡§ï‡•ã ‡§ñ‡•ã‡§≤‡•á‡§Ç‡•§",
        
        // Learning objectives
        force_concepts: "‡§¨‡§≤ ‡§Ö‡§µ‡§ß‡§æ‡§∞‡§£‡§æ‡§è‡§Ç",
        friction_understanding: "‡§ò‡§∞‡•ç‡§∑‡§£ ‡§ï‡•Ä ‡§∏‡§Æ‡§ù",
        motion_prediction: "‡§ó‡§§‡§ø ‡§ï‡•Ä ‡§≠‡§µ‡§ø‡§∑‡•ç‡§Ø‡§µ‡§æ‡§£‡•Ä",
        newton_laws_basic: "‡§®‡•ç‡§Ø‡•Ç‡§ü‡§® ‡§ï‡•á ‡§®‡§ø‡§Ø‡§Æ (‡§¨‡•Å‡§®‡§ø‡§Ø‡§æ‡§¶‡•Ä)",
        reflection_understanding: "‡§™‡•ç‡§∞‡§§‡§ø‡§¨‡§ø‡§Ç‡§¨ ‡§ï‡•Ä ‡§∏‡§Æ‡§ù",
        refraction_basics: "‡§Ö‡§™‡§µ‡§∞‡•ç‡§§‡§® ‡§ï‡•Ä ‡§Æ‡•Ç‡§≤ ‡§¨‡§æ‡§§‡•á‡§Ç",
        light_dispersion: "‡§™‡•ç‡§∞‡§ï‡§æ‡§∂ ‡§ï‡§æ ‡§´‡•à‡§≤‡§æ‡§µ",
        optical_principles: "‡§™‡•ç‡§∞‡§ï‡§æ‡§∂‡•Ä‡§Ø ‡§∏‡§ø‡§¶‡•ç‡§ß‡§æ‡§Ç‡§§",
        magnetic_field_concepts: "‡§ö‡•Å‡§Ç‡§¨‡§ï‡•Ä‡§Ø ‡§ï‡•ç‡§∑‡•á‡§§‡•ç‡§∞ ‡§Ö‡§µ‡§ß‡§æ‡§∞‡§£‡§æ‡§è‡§Ç",
        attraction_repulsion: "‡§Ü‡§ï‡§∞‡•ç‡§∑‡§£/‡§µ‡§ø‡§ï‡§∞‡•ç‡§∑‡§£",
        electromagnet_basics: "‡§µ‡§ø‡§¶‡•ç‡§Ø‡•Å‡§§ ‡§ö‡•Å‡§Æ‡•ç‡§¨‡§ï ‡§ï‡•Ä ‡§Æ‡•Ç‡§≤ ‡§¨‡§æ‡§§‡•á‡§Ç",
        magnetic_pole_understanding: "‡§ö‡•Å‡§Ç‡§¨‡§ï‡•Ä‡§Ø ‡§ß‡•ç‡§∞‡•Å‡§µ ‡§ï‡•Ä ‡§∏‡§Æ‡§ù",
        ohm_law_mastery: "‡§ì‡§Æ ‡§ï‡•á ‡§®‡§ø‡§Ø‡§Æ ‡§Æ‡•á‡§Ç ‡§Æ‡§π‡§æ‡§∞‡§§",
        series_circuits: "‡§∂‡•ç‡§∞‡•É‡§Ç‡§ñ‡§≤‡§æ ‡§∏‡§∞‡•ç‡§ï‡§ø‡§ü",
        parallel_circuits: "‡§∏‡§Æ‡§æ‡§®‡§æ‡§Ç‡§§‡§∞ ‡§∏‡§∞‡•ç‡§ï‡§ø‡§ü",
        current_voltage_resistance: "‡§ß‡§æ‡§∞‡§æ/‡§µ‡•ã‡§≤‡•ç‡§ü‡•á‡§ú/‡§™‡•ç‡§∞‡§§‡§ø‡§∞‡•ã‡§ß",
        wave_properties: "‡§§‡§∞‡§Ç‡§ó ‡§ó‡•Å‡§£",
        frequency_concepts: "‡§Ü‡§µ‡•É‡§§‡•ç‡§§‡§ø ‡§Ö‡§µ‡§ß‡§æ‡§∞‡§£‡§æ‡§è‡§Ç",
        wavelength_understanding: "‡§§‡§∞‡§Ç‡§ó ‡§¶‡•à‡§∞‡•ç‡§ò‡•ç‡§Ø ‡§ï‡•Ä ‡§∏‡§Æ‡§ù",
        sound_light_comparison: "‡§ß‡•ç‡§µ‡§®‡§ø/‡§™‡•ç‡§∞‡§ï‡§æ‡§∂ ‡§§‡•Å‡§≤‡§®‡§æ",
        projectile_motion: "‡§™‡•ç‡§∞‡§ï‡•ç‡§∑‡•á‡§™‡•ç‡§Ø ‡§ó‡§§‡§ø",
        kinematics_equations: "‡§ó‡§§‡§ø‡§ï‡•Ä ‡§∏‡§Æ‡•Ä‡§ï‡§∞‡§£",
        trajectory_analysis: "‡§™‡•ç‡§∞‡§ï‡•ç‡§∑‡•á‡§™‡§µ‡§ï‡•ç‡§∞ ‡§µ‡§ø‡§∂‡•ç‡§≤‡•á‡§∑‡§£",
        vector_concepts: "‡§µ‡•á‡§ï‡•ç‡§ü‡§∞ ‡§Ö‡§µ‡§ß‡§æ‡§∞‡§£‡§æ‡§è‡§Ç",
        atomic_models: "‡§™‡§∞‡§Æ‡§æ‡§£‡•Å ‡§Æ‡•â‡§°‡§≤",
        energy_quantization: "‡§ä‡§∞‡•ç‡§ú‡§æ ‡§ï‡•ç‡§µ‡§æ‡§Ç‡§ü‡•Ä‡§ï‡§∞‡§£",
        photoelectric_effect: "‡§´‡•ã‡§ü‡•ã‡§á‡§≤‡•á‡§ï‡•ç‡§ü‡•ç‡§∞‡§ø‡§ï ‡§™‡•ç‡§∞‡§≠‡§æ‡§µ",
        emission_spectra: "‡§â‡§§‡•ç‡§∏‡§∞‡•ç‡§ú‡§® ‡§∏‡•ç‡§™‡•á‡§ï‡•ç‡§ü‡•ç‡§∞‡§æ",
        
        // Modal objectives for Class 11
        objective_1: "‡§™‡•ç‡§∞‡§ï‡•ç‡§∑‡•á‡§™‡•ç‡§Ø ‡§ó‡§§‡§ø ‡§Æ‡•á‡§Ç ‡§Æ‡§π‡§æ‡§∞‡§§",
        objective_2: "‡§ó‡§§‡§ø‡§ï‡•Ä ‡§∏‡§Æ‡•Ä‡§ï‡§∞‡§£ ‡§Ö‡§®‡•Å‡§™‡•ç‡§∞‡§Ø‡•ã‡§ó",
        objective_3: "‡§™‡•ç‡§∞‡§ï‡•ç‡§∑‡•á‡§™‡§µ‡§ï‡•ç‡§∞ ‡§µ‡§ø‡§∂‡•ç‡§≤‡•á‡§∑‡§£ ‡§ï‡•å‡§∂‡§≤",
        objective_4: "‡§µ‡•á‡§ï‡•ç‡§ü‡§∞ ‡§Ö‡§µ‡§ß‡§æ‡§∞‡§£‡§æ ‡§∏‡§Æ‡§ù",
        
        // Features
        feature_1_title: "‡§á‡§Ç‡§ü‡§∞‡•à‡§ï‡•ç‡§ü‡§ø‡§µ ‡§≤‡§∞‡•ç‡§®‡§ø‡§Ç‡§ó",
        feature_1_desc: "‡§™‡•ç‡§∞‡§§‡•ç‡§Ø‡•á‡§ï ‡§Ö‡§µ‡§ß‡§æ‡§∞‡§£‡§æ ‡§Ü‡§ï‡§∞‡•ç‡§∑‡§ï ‡§ñ‡•á‡§≤‡•ã‡§Ç ‡§ï‡•á ‡§Æ‡§æ‡§ß‡•ç‡§Ø‡§Æ ‡§∏‡•á ‡§∏‡§ø‡§ñ‡§æ‡§à ‡§ú‡§æ‡§§‡•Ä ‡§π‡•à ‡§ú‡•ã ‡§≠‡•å‡§§‡§ø‡§ï‡•Ä ‡§ï‡•ã ‡§Æ‡§ú‡•á‡§¶‡§æ‡§∞ ‡§î‡§∞ ‡§Ø‡§æ‡§¶‡§ó‡§æ‡§∞ ‡§¨‡§®‡§æ‡§§‡•Ä ‡§π‡•à‡•§",
        feature_2_title: "‡§™‡•ç‡§∞‡§ó‡§§‡§ø‡§∂‡•Ä‡§≤ ‡§ï‡§†‡§ø‡§®‡§æ‡§à",
        feature_2_desc: "‡§™‡§æ‡§†‡•ç‡§Ø‡§ï‡•ç‡§∞‡§Æ ‡§¨‡•Å‡§®‡§ø‡§Ø‡§æ‡§¶‡•Ä ‡§¨‡§≤ ‡§Ö‡§µ‡§ß‡§æ‡§∞‡§£‡§æ‡§ì‡§Ç ‡§∏‡•á ‡§Ü‡§ß‡•Å‡§®‡§ø‡§ï ‡§≠‡•å‡§§‡§ø‡§ï‡•Ä ‡§§‡§ï ‡§µ‡•ç‡§Ø‡§µ‡§∏‡•ç‡§•‡§ø‡§§ ‡§∞‡•Ç‡§™ ‡§∏‡•á ‡§¨‡§®‡§æ‡§Ø‡§æ ‡§ó‡§Ø‡§æ ‡§π‡•à‡•§",
        feature_3_title: "‡§â‡§™‡§≤‡§¨‡•ç‡§ß‡§ø ‡§™‡•ç‡§∞‡§£‡§æ‡§≤‡•Ä",
        feature_3_desc: "‡§õ‡§æ‡§§‡•ç‡§∞ ‡§≠‡•å‡§§‡§ø‡§ï‡•Ä ‡§Ö‡§µ‡§ß‡§æ‡§∞‡§£‡§æ‡§ì‡§Ç ‡§Æ‡•á‡§Ç ‡§Æ‡§π‡§æ‡§∞‡§§ ‡§π‡§æ‡§∏‡§ø‡§≤ ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§¨‡•à‡§ú, ‡§™‡•ç‡§∞‡§Æ‡§æ‡§£‡§™‡§§‡•ç‡§∞ ‡§î‡§∞ ‡§Æ‡§æ‡§®‡•ç‡§Ø‡§§‡§æ ‡§Ö‡§∞‡•ç‡§ú‡§ø‡§§ ‡§ï‡§∞‡§§‡•á ‡§π‡•à‡§Ç‡•§",
        feature_4_title: "‡§µ‡§æ‡§∏‡•ç‡§§‡§µ‡§ø‡§ï ‡§¶‡•Å‡§®‡§ø‡§Ø‡§æ ‡§ï‡•á ‡§Ö‡§®‡•Å‡§™‡•ç‡§∞‡§Ø‡•ã‡§ó",
        feature_4_desc: "‡§π‡§∞ ‡§ñ‡•á‡§≤ ‡§≠‡•å‡§§‡§ø‡§ï‡•Ä ‡§Ö‡§µ‡§ß‡§æ‡§∞‡§£‡§æ‡§ì‡§Ç ‡§ï‡•ã ‡§µ‡§æ‡§∏‡•ç‡§§‡§µ‡§ø‡§ï ‡§¶‡•Å‡§®‡§ø‡§Ø‡§æ ‡§ï‡•Ä ‡§ò‡§ü‡§®‡§æ‡§ì‡§Ç ‡§∏‡•á ‡§ú‡•ã‡§°‡§º‡§§‡§æ ‡§π‡•à‡•§",
        feature_5_title: "‡§Ö‡§®‡•Å‡§ï‡•Ç‡§≤‡•Ä ‡§∂‡§ø‡§ï‡•ç‡§∑‡§æ",
        feature_5_desc: "‡§Ö‡§®‡•Å‡§ï‡•Ç‡§≤‡•Ä ‡§è‡§≤‡•ç‡§ó‡•ã‡§∞‡§ø‡§¶‡§Æ ‡§õ‡§æ‡§§‡•ç‡§∞ ‡§™‡•ç‡§∞‡§¶‡§∞‡•ç‡§∂‡§® ‡§ï‡•á ‡§Ü‡§ß‡§æ‡§∞ ‡§™‡§∞ ‡§ï‡§†‡§ø‡§®‡§æ‡§à ‡§ï‡•ã ‡§∏‡§Æ‡§æ‡§Ø‡•ã‡§ú‡§ø‡§§ ‡§ï‡§∞‡§§‡•á ‡§π‡•à‡§Ç‡•§",
        feature_6_title: "‡§∏‡§æ‡§Æ‡§æ‡§ú‡§ø‡§ï ‡§∂‡§ø‡§ï‡•ç‡§∑‡§æ",
        feature_6_desc: "‡§õ‡§æ‡§§‡•ç‡§∞ ‡§∏‡§æ‡§•‡§ø‡§Ø‡•ã‡§Ç ‡§ï‡•á ‡§∏‡§æ‡§• ‡§™‡•ç‡§∞‡§§‡§ø‡§∏‡•ç‡§™‡§∞‡•ç‡§ß‡§æ ‡§ï‡§∞ ‡§∏‡§ï‡§§‡•á ‡§π‡•à‡§Ç ‡§î‡§∞ ‡§≠‡•å‡§§‡§ø‡§ï‡•Ä ‡§ü‡•Ç‡§∞‡•ç‡§®‡§æ‡§Æ‡•á‡§Ç‡§ü ‡§Æ‡•á‡§Ç ‡§≠‡§æ‡§ó ‡§≤‡•á ‡§∏‡§ï‡§§‡•á ‡§π‡•à‡§Ç‡•§"
    },
    
    or: {
        // Header and main content
        hero_title: "‡¨∂‡≠ç‡¨∞‡≠á‡¨£‡≠Ä 6-12 ‡¨™‡¨æ‡¨á‡¨Å ‡¨Ü‡¨™‡¨£‡¨ô‡≠ç‡¨ï ‡¨™‡¨¶‡¨æ‡¨∞‡≠ç‡¨• ‡¨¨‡¨ø‡¨ú‡≠ç‡¨û‡¨æ‡¨® ‡¨Ø‡¨æ‡¨§‡≠ç‡¨∞‡¨æ ‡¨Ü‡¨¨‡¨ø‡¨∑‡≠ç‡¨ï‡¨æ‡¨∞ ‡¨ï‡¨∞‡¨®‡≠ç‡¨§‡≠Å",
        hero_subtitle: "‡¨¨‡¨≥ ‡¨ï‡≠ç‡¨∑‡≠á‡¨§‡≠ç‡¨∞‡¨∞‡≠Å ‡¨ï‡≠ç‡≠±‡¨æ‡¨£‡≠ç‡¨ü‡¨Æ ‡¨Æ‡≠á‡¨ï‡¨æ‡¨®‡¨ø‡¨ï‡≠ç‡¨∏ ‡¨™‡¨∞‡≠ç‡¨Ø‡≠ç‡≠ü‡¨®‡≠ç‡¨§, ‡¨™‡≠ç‡¨∞‡¨§‡≠ç‡≠ü‡≠á‡¨ï ‡¨∂‡≠ç‡¨∞‡≠á‡¨£‡≠Ä ‡¨∏‡≠ç‡¨§‡¨∞‡¨∞‡≠á ‡¨Ö‡¨®‡¨®‡≠ç‡≠ü ‡¨ñ‡≠á‡¨≥ ‡¨Ö‡¨õ‡¨ø ‡¨Ø‡¨æ‡¨π‡¨æ ‡¨™‡¨¶‡¨æ‡¨∞‡≠ç‡¨• ‡¨¨‡¨ø‡¨ú‡≠ç‡¨û‡¨æ‡¨®‡¨ï‡≠Å ‡¨Ü‡¨ï‡¨∞‡≠ç‡¨∑‡¨£‡≠Ä‡≠ü, ‡¨á‡¨£‡≠ç‡¨ü‡¨∞‡¨æ‡¨ï‡≠ç‡¨ü‡¨ø‡¨≠ ‡¨è‡¨¨‡¨Ç ‡¨Æ‡¨ú‡¨æ‡¨¶‡¨æ‡¨∞ ‡¨ï‡¨∞‡¨ø‡¨¨‡¨æ ‡¨™‡¨æ‡¨á‡¨Å ‡¨°‡¨ø‡¨ú‡¨æ‡¨á‡¨® ‡¨ï‡¨∞‡¨æ‡¨Ø‡¨æ‡¨á‡¨õ‡¨ø‡•§",
        download_btn: "üìã ‡¨∏‡¨Ç‡¨™‡≠Ç‡¨∞‡≠ç‡¨£‡≠ç‡¨£ ‡¨™‡¨æ‡¨†‡≠ç‡≠ü‡¨ï‡≠ç‡¨∞‡¨Æ PDF ‡¨°‡¨æ‡¨â‡¨®‡¨≤‡≠ã‡¨° ‡¨ï‡¨∞‡¨®‡≠ç‡¨§‡≠Å",
        game_approach: "‡¨®‡¨ø‡¨∞‡≠ç‡¨¶‡¨ø‡¨∑‡≠ç‡¨ü ‡¨™‡¨¶‡¨æ‡¨∞‡≠ç‡¨• ‡¨¨‡¨ø‡¨ú‡≠ç‡¨û‡¨æ‡¨® ‡¨ß‡¨æ‡¨∞‡¨£‡¨æ‡¨ó‡≠Å‡¨°‡¨º‡¨ø‡¨ï‡¨∞‡≠á ‡¨¶‡¨ï‡≠ç‡¨∑‡¨§‡¨æ ‡¨π‡¨æ‡¨∏‡¨≤ ‡¨ï‡¨∞‡¨ø‡¨¨‡¨æ ‡¨™‡¨æ‡¨á‡¨Å ‡¨™‡≠ç‡¨∞‡¨§‡≠ç‡≠ü‡≠á‡¨ï ‡¨∂‡≠ç‡¨∞‡≠á‡¨£‡≠Ä ‡¨∏‡≠ç‡¨§‡¨∞‡¨∞‡≠á ‡¨è‡¨ï ‡¨Ö‡¨®‡¨®‡≠ç‡≠ü ‡¨ñ‡≠á‡¨≥-‡¨Ü‡¨ß‡¨æ‡¨∞‡¨ø‡¨§ ‡¨™‡¨¶‡≠ç‡¨ß‡¨§‡¨ø ‡¨Ö‡¨õ‡¨ø",
        features_title: "‡¨ï‡¨æ‡¨π‡¨ø‡¨Å‡¨ï‡¨ø E-Vidya ‡¨™‡¨¶‡¨æ‡¨∞‡≠ç‡¨• ‡¨¨‡¨ø‡¨ú‡≠ç‡¨û‡¨æ‡¨® ‡¨ö‡≠ü‡¨® ‡¨ï‡¨∞‡¨ø‡¨¨‡≠á?",
        
        // Modal content
        coming_soon: "‡¨∂‡≠Ä‡¨ò‡≠ç‡¨∞ ‡¨Ü‡¨∏‡≠Å‡¨õ‡¨ø!",
        coming_soon_message: "‡¨è‡¨π‡¨ø ‡¨™‡¨¶‡¨æ‡¨∞‡≠ç‡¨• ‡¨¨‡¨ø‡¨ú‡≠ç‡¨û‡¨æ‡¨® ‡¨¶‡≠Å:‡¨∏‡¨æ‡¨π‡¨∏‡¨ø‡¨ï ‡¨ï‡¨æ‡¨∞‡≠ç‡¨Ø‡≠ç‡≠ü ‡¨¨‡¨∞‡≠ç‡¨§‡≠ç‡¨§‡¨Æ‡¨æ‡¨® ‡¨¨‡¨ø‡¨ï‡¨æ‡¨∂ ‡¨π‡≠á‡¨â‡¨õ‡¨ø‡•§ ‡¨è‡¨ï ‡¨∞‡≠ã‡¨Æ‡¨æ‡¨û‡≠ç‡¨ö‡¨ï‡¨∞ ‡¨∂‡¨ø‡¨ï‡≠ç‡¨∑‡¨£ ‡¨Ö‡¨®‡≠Å‡¨≠‡¨¨ ‡¨™‡¨æ‡¨á‡¨Å ‡¨Ö‡¨™‡≠á‡¨ï‡≠ç‡¨∑‡¨æ ‡¨ï‡¨∞‡¨®‡≠ç‡¨§‡≠Å!",
        got_it: "‡¨¨‡≠Å‡¨ù‡¨ø‡¨ó‡¨≤‡¨ø!",
        ready_to_play: "‡¨ñ‡≠á‡¨≥‡¨ø‡¨¨‡¨æ‡¨ï‡≠Å ‡¨™‡≠ç‡¨∞‡¨∏‡≠ç‡¨§‡≠Å‡¨§!",
        projectile_available_text: "üéØ ‡¨™‡≠ç‡¨∞‡¨ï‡≠ç‡¨∑‡≠á‡¨™‡≠ç‡≠ü ‡¨Ü‡¨∞‡≠á‡¨®‡¨æ ‡¨¨‡¨∞‡≠ç‡¨§‡≠ç‡¨§‡¨Æ‡¨æ‡¨® ‡¨â‡¨™‡¨≤‡¨¨‡≠ç‡¨ß! ‡¨ï‡≠ã‡¨£, ‡¨¨‡≠á‡¨ó ‡¨è‡¨¨‡¨Ç ‡¨Æ‡¨æ‡¨ß‡≠ç‡≠ü‡¨æ‡¨ï‡¨∞‡≠ç‡¨∑‡¨£ ‡¨∏‡¨Æ‡¨®‡≠ç‡≠±‡≠ü ‡¨ï‡¨∞‡¨ø ‡¨ó‡¨§‡¨ø‡¨∂‡≠Ä‡¨≥ ‡¨≤‡¨ï‡≠ç‡¨∑‡≠ç‡≠ü‡¨ó‡≠Å‡¨°‡¨º‡¨ø‡¨ï‡≠Å ‡¨Æ‡¨æ‡¨∞‡¨ø‡¨¨‡¨æ ‡¨™‡¨æ‡¨á‡¨Å ‡¨™‡≠ç‡¨∞‡¨ï‡≠ç‡¨∑‡≠á‡¨™‡≠ç‡≠ü ‡¨≤‡¨û‡≠ç‡¨ö ‡¨ï‡¨∞‡¨®‡≠ç‡¨§‡≠Å‡•§",
        learning_objectives: "‡¨∂‡¨ø‡¨ï‡≠ç‡¨∑‡¨æ ‡¨â‡¨¶‡≠ç‡¨¶‡≠á‡¨∂‡≠ç‡≠ü:",
        maybe_later: "‡¨¨‡≠ã‡¨ß‡¨π‡≠Å‡¨è ‡¨™‡¨∞‡≠á",
        start_playing: "‡¨ñ‡≠á‡¨≥‡¨ø‡¨¨‡¨æ ‡¨Ü‡¨∞‡¨Æ‡≠ç‡¨≠ ‡¨ï‡¨∞‡¨®‡≠ç‡¨§‡≠Å",
        
        // Class titles
        force_fields: "‡¨¨‡¨≥ ‡¨ï‡≠ç‡¨∑‡≠á‡¨§‡≠ç‡¨∞",
        light_quest: "‡¨Ü‡¨≤‡≠ã‡¨ï ‡¨Ö‡¨®‡≠ç‡≠±‡≠á‡¨∑‡¨£",
        magnet_maze: "‡¨ö‡≠Å‡¨Æ‡≠ç‡¨¨‡¨ï ‡¨Æ‡≠ç‡≠ü‡¨æ‡¨ú‡≠ç",
        circuit_builder: "‡¨∏‡¨∞‡≠ç‡¨ï‡¨ø‡¨ü‡≠ç ‡¨¨‡¨ø‡¨≤‡≠ç‡¨°‡¨∞",
        wave_rider: "‡¨§‡¨∞‡¨ô‡≠ç‡¨ó ‡¨Ü‡¨∞‡≠ã‡¨π‡≠Ä",
        projectile_arena: "‡¨™‡≠ç‡¨∞‡¨ï‡≠ç‡¨∑‡≠á‡¨™‡≠ç‡≠ü ‡¨Ü‡¨∞‡≠á‡¨®‡¨æ",
        quantum_quest: "‡¨ï‡≠ç‡≠±‡¨æ‡¨£‡≠ç‡¨ü‡¨Æ ‡¨Ö‡¨®‡≠ç‡≠±‡≠á‡¨∑‡¨£",
        
        // Class subtitles
        physics_adventure: "‡¨™‡¨¶‡¨æ‡¨∞‡≠ç‡¨• ‡¨¨‡¨ø‡¨ú‡≠ç‡¨û‡¨æ‡¨® ‡¨Ö‡¨≠‡¨ø‡¨Ø‡¨æ‡¨®",
        optics_adventure: "‡¨Ö‡¨™‡≠ç‡¨ü‡¨ø‡¨ï‡≠ç‡¨∏ ‡¨Ö‡¨≠‡¨ø‡¨Ø‡¨æ‡¨®",
        magnetic_adventure: "‡¨ö‡≠Å‡¨Æ‡≠ç‡¨¨‡¨ï‡≠Ä‡≠ü ‡¨Ö‡¨≠‡¨ø‡¨Ø‡¨æ‡¨®",
        electrical_adventure: "‡¨¨‡¨ø‡¨¶‡≠ç‡≠ü‡≠Å‡¨§‡≠ç ‡¨Ö‡¨≠‡¨ø‡¨Ø‡¨æ‡¨®",
        wave_adventure: "‡¨§‡¨∞‡¨ô‡≠ç‡¨ó ‡¨Ö‡¨≠‡¨ø‡¨Ø‡¨æ‡¨®",
        kinematics_adventure: "‡¨ó‡¨§‡¨ø‡¨¨‡¨ø‡¨¶‡≠ç‡≠ü‡¨æ ‡¨Ö‡¨≠‡¨ø‡¨Ø‡¨æ‡¨®",
        modern_physics_adventure: "‡¨Ü‡¨ß‡≠Å‡¨®‡¨ø‡¨ï ‡¨™‡¨¶‡¨æ‡¨∞‡≠ç‡¨• ‡¨¨‡¨ø‡¨ú‡≠ç‡¨û‡¨æ‡¨® ‡¨Ö‡¨≠‡¨ø‡¨Ø‡¨æ‡¨®",
        
        // Class descriptions
        force_fields_desc: "‡¨™‡≠ç‡¨∞‡≠ü‡≠ã‡¨ó ‡¨π‡≠ã‡¨á‡¨•‡¨ø‡¨¨‡¨æ ‡¨¨‡¨≥‡¨ó‡≠Å‡¨°‡¨º‡¨ø‡¨ï‡≠Å ‡¨∏‡¨Æ‡¨®‡≠ç‡≠±‡≠ü ‡¨ï‡¨∞‡¨ø ‡¨è‡¨¨‡¨Ç ‡¨ó‡¨§‡¨ø‡¨∞ ‡¨™‡≠Ç‡¨∞‡≠ç‡¨¨‡¨æ‡¨®‡≠Å‡¨Æ‡¨æ‡¨® ‡¨ï‡¨∞‡¨ø ‡¨¨‡¨∏‡≠ç‡¨§‡≠Å‡¨ó‡≠Å‡¨°‡¨º‡¨ø‡¨ï‡≠Å ‡¨è‡¨ï ‡¨Æ‡≠ç‡≠ü‡¨æ‡¨ú‡≠ç ‡¨Æ‡¨æ‡¨ß‡≠ç‡≠ü‡¨Æ‡¨∞‡≠á ‡¨ò‡≠Å‡¨û‡≠ç‡¨ö‡¨æ‡¨®‡≠ç‡¨§‡≠Å‡•§",
        light_quest_desc: "‡¨Ü‡¨≤‡≠ã‡¨ï ‡¨ï‡¨ø‡¨∞‡¨£‡¨ó‡≠Å‡¨°‡¨º‡¨ø‡¨ï‡≠Å ‡¨™‡¨•‡¨™‡≠ç‡¨∞‡¨¶‡¨∞‡≠ç‡¨∂‡¨® ‡¨ï‡¨∞‡¨ø‡¨¨‡¨æ ‡¨™‡¨æ‡¨á‡¨Å ‡¨¶‡¨∞‡≠ç‡¨™‡¨£, ‡¨≤‡≠á‡¨®‡≠ç‡¨∏ ‡¨è‡¨¨‡¨Ç ‡¨™‡≠ç‡¨∞‡¨ø‡¨ú‡¨Æ ‡¨∏‡¨π‡¨ø‡¨§ ‡¨è‡¨ï ‡¨ï‡≠á‡¨∏‡≠ç ‡¨Ö‡¨®‡≠ç‡≠±‡≠á‡¨∑‡¨£ ‡¨ï‡¨∞‡¨®‡≠ç‡¨§‡≠Å‡•§",
        magnet_maze_desc: "‡¨¨‡¨ø‡¨≠‡¨ø‡¨®‡≠ç‡¨® ‡¨∏‡≠ç‡¨•‡¨æ‡¨®‡¨∞‡≠á ‡¨∞‡¨ñ‡¨æ‡¨Ø‡¨æ‡¨á‡¨•‡¨ø‡¨¨‡¨æ ‡¨ö‡≠Å‡¨Æ‡≠ç‡¨¨‡¨ï ‡¨¨‡≠ç‡≠ü‡¨¨‡¨π‡¨æ‡¨∞ ‡¨ï‡¨∞‡¨ø ‡¨ß‡¨æ‡¨§‡≠Å ‡¨¨‡¨≤‡¨ï‡≠Å ‡¨Æ‡≠ç‡≠ü‡¨æ‡¨ú‡≠ç ‡¨Æ‡¨æ‡¨ß‡≠ç‡≠ü‡¨Æ‡¨∞‡≠á ‡¨®‡≠á‡¨≠‡¨ø‡¨ó‡≠á‡¨ü‡≠ç ‡¨ï‡¨∞‡¨®‡≠ç‡¨§‡≠Å‡•§",
        circuit_builder_desc: "‡¨≠‡¨∞‡≠ç‡¨ö‡≠Å‡¨Ü‡¨≤ ‡¨≤‡≠ç‡≠ü‡¨æ‡¨¨‡¨∞‡≠á ‡¨Æ‡≠á‡¨∏‡¨ø‡¨®‡¨ó‡≠Å‡¨°‡¨º‡¨ø‡¨ï‡≠Å ‡¨∂‡¨ï‡≠ç‡¨§‡¨ø ‡¨Ø‡≠ã‡¨ó‡¨æ‡¨á‡¨¨‡¨æ ‡¨™‡¨æ‡¨á‡¨Å ‡¨ï‡¨æ‡¨∞‡≠ç‡¨Ø‡≠ç‡≠ü‡¨ï‡≠ç‡¨∑‡¨Æ ‡¨¨‡¨ø‡¨¶‡≠ç‡≠ü‡≠Å‡¨§‡≠ç ‡¨∏‡¨∞‡≠ç‡¨ï‡¨ø‡¨ü‡≠ç ‡¨®‡¨ø‡¨∞‡≠ç‡¨Æ‡¨æ‡¨£ ‡¨ï‡¨∞‡¨®‡≠ç‡¨§‡≠Å‡•§",
        wave_rider_desc: "‡¨Ü‡¨¨‡≠É‡¨§‡≠ç‡¨§‡¨ø, ‡¨§‡¨∞‡¨ô‡≠ç‡¨ó ‡¨¶‡¨∞‡≠ç‡¨ò‡≠ç‡≠ü ‡¨è‡¨¨‡¨Ç ‡¨™‡≠ç‡¨∞‡¨∏‡≠ç‡¨•‡¨ï‡≠Å ‡¨ü‡≠ç‡≠ü‡≠Å‡¨®‡≠ç ‡¨ï‡¨∞‡¨ø ‡¨∏‡¨Æ‡≠Å‡¨¶‡≠ç‡¨∞ ‡¨â‡¨™‡¨∞‡≠á ‡¨§‡¨∞‡¨ô‡≠ç‡¨ó ‡¨ö‡¨¢‡¨º‡¨®‡≠ç‡¨§‡≠Å‡•§",
        projectile_arena_desc: "‡¨ï‡≠ã‡¨£/‡¨¨‡≠á‡¨ó/‡¨Æ‡¨æ‡¨ß‡≠ç‡≠ü‡¨æ‡¨ï‡¨∞‡≠ç‡¨∑‡¨£ ‡¨∏‡¨Æ‡¨®‡≠ç‡≠±‡≠ü ‡¨ï‡¨∞‡¨ø ‡¨ó‡¨§‡¨ø‡¨∂‡≠Ä‡¨≥ ‡¨≤‡¨ï‡≠ç‡¨∑‡≠ç‡≠ü‡¨ó‡≠Å‡¨°‡¨º‡¨ø‡¨ï‡≠Å ‡¨Æ‡¨æ‡¨∞‡¨ø‡¨¨‡¨æ ‡¨™‡¨æ‡¨á‡¨Å ‡¨™‡≠ç‡¨∞‡¨ï‡≠ç‡¨∑‡≠á‡¨™‡≠ç‡≠ü ‡¨≤‡¨û‡≠ç‡¨ö ‡¨ï‡¨∞‡¨®‡≠ç‡¨§‡≠Å‡•§",
        quantum_quest_desc: "‡¨∂‡¨ï‡≠ç‡¨§‡¨ø ‡¨∏‡≠ç‡¨§‡¨∞, ‡¨´‡≠ã‡¨ü‡¨®‡≠ç ‡¨è‡¨¨‡¨Ç ‡¨®‡¨ø‡¨∞‡≠ç‡¨ó‡¨Æ‡¨® ‡¨∏‡≠ç‡¨™‡≠á‡¨ï‡≠ç‡¨ü‡≠ç‡¨∞‡¨æ ‡¨Ö‡¨®‡≠ç‡≠±‡≠á‡¨∑‡¨£ ‡¨ï‡¨∞‡¨ø ‡¨™‡¨∞‡¨Æ‡¨æ‡¨£‡≠Å ‡¨∞‡¨π‡¨∏‡≠ç‡≠ü ‡¨ñ‡≠ã‡¨≤‡¨®‡≠ç‡¨§‡≠Å‡•§",
        
        // Learning objectives
        force_concepts: "‡¨¨‡¨≥ ‡¨ß‡¨æ‡¨∞‡¨£‡¨æ‡¨ó‡≠Å‡¨°‡¨º‡¨ø‡¨ï",
        friction_understanding: "‡¨ò‡¨∞‡≠ç‡¨∑‡¨£ ‡¨¨‡≠Å‡¨ù‡¨ø‡¨¨‡¨æ",
        motion_prediction: "‡¨ó‡¨§‡¨ø ‡¨™‡≠Ç‡¨∞‡≠ç‡¨¨‡¨æ‡¨®‡≠Å‡¨Æ‡¨æ‡¨®",
        newton_laws_basic: "‡¨®‡≠ç‡≠ü‡≠Å‡¨ü‡¨®‡≠ç ‡¨∞ ‡¨®‡¨ø‡≠ü‡¨Æ (‡¨Æ‡≠Ç‡¨≥)",
        reflection_understanding: "‡¨™‡≠ç‡¨∞‡¨§‡¨ø‡¨´‡¨≥‡¨® ‡¨¨‡≠Å‡¨ù‡¨ø‡¨¨‡¨æ",
        refraction_basics: "‡¨™‡≠ç‡¨∞‡¨§‡¨ø‡¨∏‡¨∞‡¨£ ‡¨Æ‡≠Ç‡¨≥ ‡¨¨‡¨ø‡¨∑‡≠ü",
        light_dispersion: "‡¨Ü‡¨≤‡≠ã‡¨ï ‡¨¨‡¨ø‡¨ö‡≠ç‡¨õ‡≠Å‡¨∞‡¨£",
        optical_principles: "‡¨Ö‡¨™‡≠ç‡¨ü‡¨ø‡¨ï‡¨æ‡¨≤ ‡¨®‡≠Ä‡¨§‡¨ø‡¨ó‡≠Å‡¨°‡¨º‡¨ø‡¨ï",
        magnetic_field_concepts: "‡¨ö‡≠Å‡¨Æ‡≠ç‡¨¨‡¨ï‡≠Ä‡≠ü ‡¨ï‡≠ç‡¨∑‡≠á‡¨§‡≠ç‡¨∞ ‡¨ß‡¨æ‡¨∞‡¨£‡¨æ‡¨ó‡≠Å‡¨°‡¨º‡¨ø‡¨ï",
        attraction_repulsion: "‡¨Ü‡¨ï‡¨∞‡≠ç‡¨∑‡¨£/‡¨¨‡¨ø‡¨ï‡¨∞‡≠ç‡¨∑‡¨£",
        electromagnet_basics: "‡¨¨‡¨ø‡¨¶‡≠ç‡≠ü‡≠Å‡¨§‡≠ç ‡¨ö‡≠Å‡¨Æ‡≠ç‡¨¨‡¨ï ‡¨Æ‡≠Ç‡¨≥ ‡¨¨‡¨ø‡¨∑‡≠ü",
        magnetic_pole_understanding: "‡¨ö‡≠Å‡¨Æ‡≠ç‡¨¨‡¨ï‡≠Ä‡≠ü ‡¨™‡≠ã‡¨≤ ‡¨¨‡≠Å‡¨ù‡¨ø‡¨¨‡¨æ",
        ohm_law_mastery: "‡¨ì‡¨Æ‡≠ç ‡¨®‡¨ø‡≠ü‡¨Æ ‡¨¶‡¨ï‡≠ç‡¨∑‡¨§‡¨æ",
        series_circuits: "‡¨ï‡≠ç‡¨∞‡¨Æ ‡¨∏‡¨∞‡≠ç‡¨ï‡¨ø‡¨ü‡≠ç",
        parallel_circuits: "‡¨∏‡¨Æ‡¨æ‡¨®‡≠ç‡¨§‡¨∞‡¨æ‡¨≥ ‡¨∏‡¨∞‡≠ç‡¨ï‡¨ø‡¨ü‡≠ç",
        current_voltage_resistance: "‡¨ï‡¨∞‡≠á‡¨£‡≠ç‡¨ü/‡¨≠‡≠ã‡¨≤‡¨ü‡≠á‡¨ú‡≠ç/‡¨™‡≠ç‡¨∞‡¨§‡¨ø‡¨∞‡≠ã‡¨ß",
        wave_properties: "‡¨§‡¨∞‡¨ô‡≠ç‡¨ó ‡¨ó‡≠Å‡¨£‡¨ß‡¨∞‡≠ç‡¨Æ",
        frequency_concepts: "‡¨Ü‡¨¨‡≠É‡¨§‡≠ç‡¨§‡¨ø ‡¨ß‡¨æ‡¨∞‡¨£‡¨æ‡¨ó‡≠Å‡¨°‡¨º‡¨ø‡¨ï",
        wavelength_understanding: "‡¨§‡¨∞‡¨ô‡≠ç‡¨ó ‡¨¶‡¨∞‡≠ç‡¨ò‡≠ç‡≠ü ‡¨¨‡≠Å‡¨ù‡¨ø‡¨¨‡¨æ",
        sound_light_comparison: "‡¨∂‡¨¨‡≠ç‡¨¶/‡¨Ü‡¨≤‡≠ã‡¨ï ‡¨§‡≠Å‡¨≥‡¨®‡¨æ",
        projectile_motion: "‡¨™‡≠ç‡¨∞‡¨ï‡≠ç‡¨∑‡≠á‡¨™‡≠ç‡≠ü ‡¨ó‡¨§‡¨ø",
        kinematics_equations: "‡¨ó‡¨§‡¨ø‡¨¨‡¨ø‡¨¶‡≠ç‡≠ü‡¨æ ‡¨∏‡¨Æ‡≠Ä‡¨ï‡¨∞‡¨£",
        trajectory_analysis: "‡¨™‡¨• ‡¨¨‡¨ø‡¨∂‡≠ç‡¨≥‡≠á‡¨∑‡¨£",
        vector_concepts: "‡¨≠‡≠á‡¨ï‡≠ç‡¨ü‡¨∞ ‡¨ß‡¨æ‡¨∞‡¨£‡¨æ‡¨ó‡≠Å‡¨°‡¨º‡¨ø‡¨ï",
        atomic_models: "‡¨™‡¨∞‡¨Æ‡¨æ‡¨£‡≠Å ‡¨Æ‡¨°‡≠á‡¨≤",
        energy_quantization: "‡¨∂‡¨ï‡≠ç‡¨§‡¨ø ‡¨ï‡≠ç‡≠±‡¨æ‡¨£‡≠ç‡¨ü‡¨æ‡¨á‡¨ú‡≠á‡¨∏‡¨®‡≠ç",
        photoelectric_effect: "‡¨´‡¨ü‡≠ã-‡¨á‡¨≤‡≠á‡¨ï‡≠ç‡¨ü‡≠ç‡¨∞‡¨ø‡¨ï‡≠ç ‡¨™‡≠ç‡¨∞‡¨≠‡¨æ‡¨¨",
        emission_spectra: "‡¨®‡¨ø‡¨∞‡≠ç‡¨ó‡¨Æ‡¨® ‡¨∏‡≠ç‡¨™‡≠á‡¨ï‡≠ç‡¨ü‡≠ç‡¨∞‡¨æ",
        
        // Modal objectives for Class 11
        objective_1: "‡¨™‡≠ç‡¨∞‡¨ï‡≠ç‡¨∑‡≠á‡¨™‡≠ç‡≠ü ‡¨ó‡¨§‡¨ø ‡¨¶‡¨ï‡≠ç‡¨∑‡¨§‡¨æ",
        objective_2: "‡¨ó‡¨§‡¨ø‡¨¨‡¨ø‡¨¶‡≠ç‡≠ü‡¨æ ‡¨∏‡¨Æ‡≠Ä‡¨ï‡¨∞‡¨£ ‡¨™‡≠ç‡¨∞‡≠ü‡≠ã‡¨ó",
        objective_3: "‡¨™‡¨• ‡¨¨‡¨ø‡¨∂‡≠ç‡¨≥‡≠á‡¨∑‡¨£ ‡¨ï‡≠å‡¨∂‡¨≥",
        objective_4: "‡¨≠‡≠á‡¨ï‡≠ç‡¨ü‡¨∞ ‡¨ß‡¨æ‡¨∞‡¨£‡¨æ ‡¨¨‡≠Å‡¨ù‡¨ø‡¨¨‡¨æ",
        
        // Features
        feature_1_title: "‡¨á‡¨£‡≠ç‡¨ü‡¨∞‡¨æ‡¨ï‡≠ç‡¨ü‡¨ø‡¨≠ ‡¨∂‡¨ø‡¨ï‡≠ç‡¨∑‡¨£",
        feature_1_desc: "‡¨™‡≠ç‡¨∞‡¨§‡≠ç‡≠ü‡≠á‡¨ï ‡¨ß‡¨æ‡¨∞‡¨£‡¨æ ‡¨Ü‡¨ï‡¨∞‡≠ç‡¨∑‡¨£‡≠Ä‡≠ü ‡¨ñ‡≠á‡¨≥ ‡¨Æ‡¨æ‡¨ß‡≠ç‡≠ü‡¨Æ‡¨∞‡≠á ‡¨∂‡¨ø‡¨ï‡≠ç‡¨∑‡¨æ ‡¨¶‡¨ø‡¨Ü‡¨Ø‡¨æ‡¨è ‡¨Ø‡¨æ‡¨π‡¨æ ‡¨™‡¨¶‡¨æ‡¨∞‡≠ç‡¨• ‡¨¨‡¨ø‡¨ú‡≠ç‡¨û‡¨æ‡¨®‡¨ï‡≠Å ‡¨Æ‡¨ú‡¨æ‡¨¶‡¨æ‡¨∞ ‡¨è‡¨¨‡¨Ç ‡¨∏‡≠ç‡¨Æ‡¨∞‡¨£‡≠Ä‡≠ü ‡¨ï‡¨∞‡¨ø‡¨•‡¨æ‡¨è‡•§",
        feature_2_title: "‡¨™‡≠ç‡¨∞‡¨ó‡¨§‡¨ø‡¨∂‡≠Ä‡¨≥ ‡¨ï‡¨†‡¨ø‡¨®‡¨§‡¨æ",
        feature_2_desc: "‡¨™‡¨æ‡¨†‡≠ç‡≠ü‡¨ï‡≠ç‡¨∞‡¨Æ ‡¨Æ‡≠Ç‡¨≥ ‡¨¨‡¨≥ ‡¨ß‡¨æ‡¨∞‡¨£‡¨æ‡¨ó‡≠Å‡¨°‡¨º‡¨ø‡¨ï‡¨∞‡≠Å ‡¨Ü‡¨ß‡≠Å‡¨®‡¨ø‡¨ï ‡¨™‡¨¶‡¨æ‡¨∞‡≠ç‡¨• ‡¨¨‡¨ø‡¨ú‡≠ç‡¨û‡¨æ‡¨® ‡¨™‡¨∞‡≠ç‡¨Ø‡≠ç‡≠ü‡¨®‡≠ç‡¨§ ‡¨¨‡≠ç‡≠ü‡¨¨‡¨∏‡≠ç‡¨•‡¨ø‡¨§ ‡¨≠‡¨æ‡¨¨‡¨∞‡≠á ‡¨®‡¨ø‡¨∞‡≠ç‡¨Æ‡¨ø‡¨§‡•§",
        feature_3_title: "‡¨â‡¨™‡¨≤‡¨¨‡≠ç‡¨ß‡¨ø ‡¨™‡≠ç‡¨∞‡¨£‡¨æ‡¨≥‡≠Ä",
        feature_3_desc: "‡¨õ‡¨æ‡¨§‡≠ç‡¨∞‡¨Æ‡¨æ‡¨®‡≠á ‡¨™‡¨¶‡¨æ‡¨∞‡≠ç‡¨• ‡¨¨‡¨ø‡¨ú‡≠ç‡¨û‡¨æ‡¨® ‡¨ß‡¨æ‡¨∞‡¨£‡¨æ‡¨ó‡≠Å‡¨°‡¨º‡¨ø‡¨ï‡¨∞‡≠á ‡¨¶‡¨ï‡≠ç‡¨∑‡¨§‡¨æ ‡¨π‡¨æ‡¨∏‡¨≤ ‡¨ï‡¨∞‡¨ø‡¨¨‡¨æ ‡¨™‡¨æ‡¨á‡¨Å ‡¨¨‡≠ç‡≠ü‡¨æ‡¨ú‡≠ç, ‡¨∏‡¨æ‡¨∞‡≠ç‡¨ü‡¨ø‡¨´‡¨ø‡¨ï‡≠á‡¨ü‡≠ç ‡¨è‡¨¨‡¨Ç ‡¨∏‡≠ç‡≠±‡≠Ä‡¨ï‡≠É‡¨§‡¨ø ‡¨Ö‡¨∞‡≠ç‡¨ú‡¨® ‡¨ï‡¨∞‡¨®‡≠ç‡¨§‡¨ø‡•§",
        feature_4_title: "‡¨¨‡¨æ‡¨∏‡≠ç‡¨§‡¨¨ ‡¨ú‡¨ó‡¨§ ‡¨™‡≠ç‡¨∞‡≠ü‡≠ã‡¨ó",
        feature_4_desc: "‡¨™‡≠ç‡¨∞‡¨§‡≠ç‡≠ü‡≠á‡¨ï ‡¨ñ‡≠á‡¨≥ ‡¨™‡¨¶‡¨æ‡¨∞‡≠ç‡¨• ‡¨¨‡¨ø‡¨ú‡≠ç‡¨û‡¨æ‡¨® ‡¨ß‡¨æ‡¨∞‡¨£‡¨æ‡¨ó‡≠Å‡¨°‡¨º‡¨ø‡¨ï‡≠Å ‡¨¨‡¨æ‡¨∏‡≠ç‡¨§‡¨¨ ‡¨ú‡¨ó‡¨§‡¨∞ ‡¨ò‡¨ü‡¨£‡¨æ‡¨ó‡≠Å‡¨°‡¨º‡¨ø‡¨ï ‡¨∏‡¨π‡¨ø‡¨§ ‡¨∏‡¨Ç‡¨Ø‡≠ã‡¨ó ‡¨ï‡¨∞‡≠á‡•§",
        feature_5_title: "‡¨Ö‡¨®‡≠Å‡¨ï‡≠Ç‡¨≥ ‡¨∂‡¨ø‡¨ï‡≠ç‡¨∑‡¨£",
        feature_5_desc: "‡¨Ö‡¨®‡≠Å‡¨ï‡≠Ç‡¨≥ ‡¨Ü‡¨≤‡¨ó‡≠ã‡¨∞‡¨ø‡¨¶‡¨Æ ‡¨õ‡¨æ‡¨§‡≠ç‡¨∞ ‡¨™‡≠ç‡¨∞‡¨¶‡¨∞‡≠ç‡¨∂‡¨® ‡¨Ü‡¨ß‡¨æ‡¨∞‡¨∞‡≠á ‡¨ï‡¨†‡¨ø‡¨®‡¨§‡¨æ‡¨ï‡≠Å ‡¨∏‡¨Æ‡¨®‡≠ç‡≠±‡≠ü ‡¨ï‡¨∞‡≠á‡•§",
        feature_6_title: "‡¨∏‡¨æ‡¨Æ‡¨æ‡¨ú‡¨ø‡¨ï ‡¨∂‡¨ø‡¨ï‡≠ç‡¨∑‡¨£",
        feature_6_desc: "‡¨õ‡¨æ‡¨§‡≠ç‡¨∞‡¨Æ‡¨æ‡¨®‡≠á ‡¨∏‡¨æ‡¨•‡≠Ä‡¨Æ‡¨æ‡¨®‡¨ô‡≠ç‡¨ï ‡¨∏‡¨π‡¨ø‡¨§ ‡¨™‡≠ç‡¨∞‡¨§‡¨ø‡¨Ø‡≠ã‡¨ó‡¨ø‡¨§‡¨æ ‡¨ï‡¨∞‡¨ø‡¨™‡¨æ‡¨∞‡¨ø‡¨¨‡≠á ‡¨è‡¨¨‡¨Ç ‡¨™‡¨¶‡¨æ‡¨∞‡≠ç‡¨• ‡¨¨‡¨ø‡¨ú‡≠ç‡¨û‡¨æ‡¨® ‡¨ü‡≠Å‡¨∞‡≠ç‡¨£‡≠ç‡¨£‡¨æ‡¨Æ‡≠á‡¨£‡≠ç‡¨ü‡¨∞‡≠á ‡¨≠‡¨æ‡¨ó ‡¨®‡≠á‡¨á‡¨™‡¨æ‡¨∞‡¨ø‡¨¨‡≠á‡•§"
    }
};

const features = [
    {
        icon: "üéÆ",
        titleKey: "feature_1_title",
        descriptionKey: "feature_1_desc"
    },
    {
        icon: "üìä", 
        titleKey: "feature_2_title",
        descriptionKey: "feature_2_desc"
    },
    {
        icon: "üèÜ",
        titleKey: "feature_3_title",
        descriptionKey: "feature_3_desc"
    },
    {
        icon: "üåç",
        titleKey: "feature_4_title",
        descriptionKey: "feature_4_desc"
    },
    {
        icon: "ü§ñ",
        titleKey: "feature_5_title",
        descriptionKey: "feature_5_desc"
    },
    {
        icon: "üë•",
        titleKey: "feature_6_title",
        descriptionKey: "feature_6_desc"
    }
];

// Current language state
let currentLanguage = 'en';

// DOM Content Loaded Event
document.addEventListener('DOMContentLoaded', function() {
    initializeApp();
    setupEventListeners();
});

// Initialize Application
function initializeApp() {
    renderGamesGrid();
    renderFeaturesGrid();
    updateLanguage(currentLanguage);
}

// Render Games Grid
function renderGamesGrid() {
    const gamesGrid = document.querySelector('.games-grid');
    gamesGrid.innerHTML = '';

    physicsClasses.forEach(gameData => {
        const gameCard = createGameCard(gameData);
        gamesGrid.appendChild(gameCard);
    });
}

// Create Game Card Element
function createGameCard(gameData) {
    const card = document.createElement('div');
    card.className = `game-card ${gameData.status === 'available' ? 'available' : ''}`;
    card.dataset.status = gameData.status;
    card.dataset.class = gameData.class;

    const objectivesTags = gameData.objectives
        .map(obj => `<span class="objective-tag" data-translate="${obj}"></span>`)
        .join('');

    card.innerHTML = `
        <span class="game-icon">${gameData.icon}</span>
        <div class="game-class">Class ${gameData.class}</div>
        <h3 class="game-title" data-translate="${gameData.titleKey}"></h3>
        <div class="game-subtitle" data-translate="${gameData.subtitleKey}"></div>
        <p class="game-description" data-translate="${gameData.descriptionKey}"></p>
        <div class="game-objectives">${objectivesTags}</div>
    `;

    // Add click event listener
    card.addEventListener('click', () => handleGameCardClick(gameData));

    return card;
}

// Handle Game Card Click
function handleGameCardClick(gameData) {
    if (gameData.status === 'available') {
        showAvailableGameModal(gameData);
    } else {
        showComingSoonModal();
    }
}

// Show Coming Soon Modal
function showComingSoonModal() {
    const modal = document.getElementById('comingSoonModal');
    modal.classList.remove('hidden');
}

// Show Available Game Modal
function showAvailableGameModal(gameData) {
    const modal = document.getElementById('availableGameModal');
    modal.classList.remove('hidden');
    
    // Store game URL for play button
    const playGameBtn = document.querySelector('.play-game-btn');
    playGameBtn.dataset.gameUrl = gameData.gameUrl;
}

// Render Features Grid
function renderFeaturesGrid() {
    const featuresGrid = document.querySelector('.features-grid');
    featuresGrid.innerHTML = '';

    features.forEach(feature => {
        const featureCard = createFeatureCard(feature);
        featuresGrid.appendChild(featureCard);
    });
}

// Create Feature Card Element
function createFeatureCard(feature) {
    const card = document.createElement('div');
    card.className = 'feature-card';

    card.innerHTML = `
        <span class="feature-icon">${feature.icon}</span>
        <h3 class="feature-title" data-translate="${feature.titleKey}"></h3>
        <p class="feature-description" data-translate="${feature.descriptionKey}"></p>
    `;

    return card;
}

// Setup Event Listeners
function setupEventListeners() {
    // Language selector buttons
    const langButtons = document.querySelectorAll('.lang-btn');
    langButtons.forEach(btn => {
        btn.addEventListener('click', () => {
            const lang = btn.dataset.lang;
            switchLanguage(lang);
        });
    });

    // Download PDF button
    const downloadBtn = document.querySelector('.download-btn');
    downloadBtn.addEventListener('click', handleDownloadPDF);

    // Modal close buttons
    const modalCloseButtons = document.querySelectorAll('.modal-close');
    modalCloseButtons.forEach(btn => {
        btn.addEventListener('click', closeModal);
    });

    // Modal backdrop clicks
    const modalBackdrops = document.querySelectorAll('.modal-backdrop');
    modalBackdrops.forEach(backdrop => {
        backdrop.addEventListener('click', closeModal);
    });

    // Play game button
    const playGameBtn = document.querySelector('.play-game-btn');
    playGameBtn.addEventListener('click', handlePlayGame);

    // ESC key to close modals
    document.addEventListener('keydown', (e) => {
        if (e.key === 'Escape') {
            closeModal();
        }
    });
}

// Switch Language
function switchLanguage(lang) {
    currentLanguage = lang;
    
    // Update active button
    document.querySelectorAll('.lang-btn').forEach(btn => {
        btn.classList.remove('active');
    });
    document.querySelector(`[data-lang="${lang}"]`).classList.add('active');
    
    // Update language
    updateLanguage(lang);
}

// Update Language Content
function updateLanguage(lang) {
    const elements = document.querySelectorAll('[data-translate]');
    elements.forEach(element => {
        const key = element.dataset.translate;
        if (translations[lang] && translations[lang][key]) {
            element.textContent = translations[lang][key];
        }
    });
}

// Handle Download PDF
function handleDownloadPDF() {
    // Create a mock PDF download
    const link = document.createElement('a');
    link.href = 'data:application/pdf;base64,JVBERi0xLjQKJcfsj6IKMSAwIG9iago8PAovVHlwZSAvQ2F0YWxvZwovUGFnZXMgMiAwIFIKPj4KZW5kb2JqCgoyIDAgb2JqCjw8Ci9UeXBlIC9QYWdlcwovS2lkcyBbMyAwIFJdCi9Db3VudCAxCj4+CmVuZG9iagoKMyAwIG9iago8PAovVHlwZSAvUGFnZQovUGFyZW50IDIgMCBSCi9NZWRpYUJveCBbMCAwIDYxMiA3OTJdCi9Db250ZW50cyA0IDAgUgo+PgplbmRvYmoKCjQgMCBvYmoKPDwKL0xlbmd0aCA0NAo+PgpzdHJlYW0KQlQKL0YxIDEyIFRmCjcyIDcyMCBUZAooRS1WaWR5YSBQaHlzaWNzIEN1cnJpY3VsdW0pIFRqCkVUCmVuZHN0cmVhbQplbmRvYmoKCnhyZWYKMCA1CjAwMDAwMDAwMDAgNjU1MzUgZiAKMDAwMDAwMDAwOSAwMDAwMCBuIAowMDAwMDAwMDU4IDAwMDAwIG4gCjAwMDAwMDAxMTUgMDAwMDAgbiAKMDAwMDAwMDIwNCAwMDAwMCBuIAp0cmFpbGVyCjw8Ci9TaXplIDUKL1Jvb3QgMSAwIFIKPj4Kc3RhcnR4cmVmCjI5OAolJUVPRgo=';
    link.download = 'evidya-physics-curriculum.pdf';
    document.body.appendChild(link);
    link.click();
    document.body.removeChild(link);

    // Show a brief success message
    const originalText = document.querySelector('.download-btn').textContent;
    const downloadBtn = document.querySelector('.download-btn');
    const currentTranslation = translations[currentLanguage];
    
    if (currentTranslation) {
        downloadBtn.textContent = currentLanguage === 'hi' ? '‚úÖ ‡§°‡§æ‡§â‡§®‡§≤‡•ã‡§° ‡§π‡•ã ‡§ó‡§Ø‡§æ!' : 
                                 currentLanguage === 'or' ? '‚úÖ ‡¨°‡¨æ‡¨â‡¨®‡¨≤‡≠ã‡¨° ‡¨π‡≠ã‡¨á‡¨ó‡¨≤‡¨æ!' : 
                                 '‚úÖ Downloaded!';
    }
    downloadBtn.style.backgroundColor = '#059669';
    
    setTimeout(() => {
        downloadBtn.textContent = originalText;
        downloadBtn.style.backgroundColor = '';
    }, 2000);
}

// Handle Play Game
function handlePlayGame() {
    const playGameBtn = document.querySelector('.play-game-btn');
    const gameUrl = playGameBtn.dataset.gameUrl;
    
    closeModal();
    
    // Show a loading/redirecting message
    const body = document.body;
    const loadingOverlay = document.createElement('div');
    loadingOverlay.style.cssText = `
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: linear-gradient(135deg, #10B981 0%, #059669 100%);
        display: flex;
        align-items: center;
        justify-content: center;
        flex-direction: column;
        color: white;
        font-size: 24px;
        font-weight: bold;
        z-index: 10000;
        font-family: 'Poppins', sans-serif;
    `;
    
    const loadingText = currentLanguage === 'hi' ? '‡§™‡•ç‡§∞‡§ï‡•ç‡§∑‡•á‡§™‡•ç‡§Ø ‡§è‡§∞‡§ø‡§®‡§æ ‡§≤‡•â‡§®‡•ç‡§ö ‡§π‡•ã ‡§∞‡§π‡§æ ‡§π‡•à...' :
                       currentLanguage === 'or' ? '‡¨™‡≠ç‡¨∞‡¨ï‡≠ç‡¨∑‡≠á‡¨™‡≠ç‡≠ü ‡¨Ü‡¨∞‡≠á‡¨®‡¨æ ‡¨≤‡¨û‡≠ç‡¨ö ‡¨π‡≠á‡¨â‡¨õ‡¨ø...' :
                       'Launching Projectile Arena...';
    
    const subText = currentLanguage === 'hi' ? '‡§≠‡•å‡§§‡§ø‡§ï‡•Ä ‡§Æ‡§ú‡§º‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§§‡•à‡§Ø‡§æ‡§∞ ‡§π‡•ã ‡§ú‡§æ‡§á‡§è!' :
                    currentLanguage === 'or' ? '‡¨™‡¨¶‡¨æ‡¨∞‡≠ç‡¨• ‡¨¨‡¨ø‡¨ú‡≠ç‡¨û‡¨æ‡¨® ‡¨Æ‡¨ú‡¨æ ‡¨™‡¨æ‡¨á‡¨Å ‡¨™‡≠ç‡¨∞‡¨∏‡≠ç‡¨§‡≠Å‡¨§ ‡¨π‡≠Å‡¨Ö‡¨®‡≠ç‡¨§‡≠Å!' :
                    'Get ready for physics fun!';
    
    loadingOverlay.innerHTML = `
        <div style="text-align: center;">
            <div style="font-size: 4rem; margin-bottom: 20px;">üéØ</div>
            <div>${loadingText}</div>
            <div style="font-size: 16px; margin-top: 10px; opacity: 0.8;">${subText}</div>
        </div>
    `;
    
    body.appendChild(loadingOverlay);
    
    setTimeout(() => {
        body.removeChild(loadingOverlay);
        // Redirect to the actual game URL
        window.location.href = gameUrl;
    }, 3000);
}

// Close Modal
function closeModal() {
    const modals = document.querySelectorAll('.modal');
    modals.forEach(modal => {
        modal.classList.add('hidden');
    });
}

// Add smooth scrolling for better UX
document.querySelectorAll('a[href^="#"]').forEach(anchor => {
    anchor.addEventListener('click', function (e) {
        e.preventDefault();
        const target = document.querySelector(this.getAttribute('href'));
        if (target) {
            target.scrollIntoView({
                behavior: 'smooth',
                block: 'start'
            });
        }
    });
});

// Add animation classes when elements come into view
const observerOptions = {
    threshold: 0.1,
    rootMargin: '0px 0px -50px 0px'
};

const observer = new IntersectionObserver((entries) => {
    entries.forEach(entry => {
        if (entry.isIntersecting) {
            entry.target.style.opacity = '1';
            entry.target.style.transform = 'translateY(0)';
        }
    });
}, observerOptions);

// Observe game cards and feature cards for animation
document.addEventListener('DOMContentLoaded', () => {
    setTimeout(() => {
        document.querySelectorAll('.game-card, .feature-card').forEach(card => {
            card.style.opacity = '0';
            card.style.transform = 'translateY(20px)';
            card.style.transition = 'opacity 0.6s ease, transform 0.6s ease';
            observer.observe(card);
        });
    }, 100);
});